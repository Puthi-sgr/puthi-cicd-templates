name: container-deploy

on:
  workflow_call:
    inputs:
      working_dir:     { type: string, default: "/opt/app" }
      compose_file:    { type: string, default: "docker-compose.prod.yml" }
      image_ref:       { type: string, required: true }              # ghcr.io/org/app:<sha>
      health_url:      { type: string, default: "" }
      manage_env:      { type: boolean, default: false }             # generic env management
      env_remote_path: { type: string, default: "${{ inputs.working_dir }}/runtime.prod.env" }
      post_rollout_cmd: { type: string, default: "" }                 # optional hook, stack-agnostic
    secrets:
      host:            { required: true }
      ssh_user:        { required: true }
      ssh_key:         { required: true }
      ghcr_pat:        { required: true }
      env_content_b64: { required: false } #base 64 env content

permissions:
  contents: read
  packages: read

jobs:
  deploy:
    if: github.repository != 'puthi-sgr/puthi-cicd-templates'
    runs-on: ubuntu-latest
    steps:
      - name: Preflight (GHCR login + image exists)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.host }}
          username: ${{ secrets.ssh_user }}
          key: ${{ secrets.ssh_key }}
          script: |
            set -euo pipefail
            echo "${{ secrets.ghcr_pat }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker manifest inspect "${{ inputs.image_ref }}" >/dev/null # Check if image exists, the CI should have pushed it

      - name: Write env file (opaque, atomic)
        if: ${{ inputs.manage_env }}
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.host }}
          username: ${{ secrets.ssh_user }}
          key: ${{ secrets.ssh_key }}
          script: |
            set -Eeuo pipefail
            WORKDIR="${{ inputs.working_dir }}"
            DEST="${{ inputs.env_remote_path }}"
            TMP="$DEST.new"; BAK="$DEST.bak"
            install -d -m 755 "$WORKDIR"
            printf '%s' "${{ secrets.env_content_b64 }}" | base64 -d > "$TMP"
            chmod 600 "$TMP"
            [ -s "$TMP" ] || { echo "env content empty"; exit 1; } #Check if content in tmp exist
            [ -f "$DEST" ] && cp -p "$DEST" "$BAK" || true
            mv -f "$TMP" "$DEST"

      - name: Rollout
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.host }}
          username: ${{ secrets.ssh_user }}
          key: ${{ secrets.ssh_key }}
          script: |
            set -euo pipefail
            cd ${{ inputs.working_dir }}
            echo "${{ secrets.ghcr_pat }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin ## authenticates to GHCR

            # THIS IS THE LINE THAT PROVIDES THE VALUE
            export IMAGE_REF="${{ inputs.image_ref }}"

            docker compose -f ${{ inputs.compose_file }} pull # Pull the image (uses $IMAGE_REF) the image pulling process is in the compose file
            docker compose -f ${{ inputs.compose_file }} up -d --remove-orphans
            if [ -n "${{ inputs.post_rollout_cmd }}" ]; then
              bash -lc '${{ inputs.post_rollout_cmd }}'
            fi
            docker image prune -f

      - name: Health check (optional)
        if: ${{ inputs.health_url != '' }}

        run: curl -fsS ${{ inputs.health_url }}


