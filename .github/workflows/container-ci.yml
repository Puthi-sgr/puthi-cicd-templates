name: container-ci
on:
  workflow_call:
    inputs:
      image_name:   { type: string, required: true }   # e.g. ghcr.io/org/app
      context:      { type: string, required: false, default: "." } #The project directory (host, your computer dummy)
      dockerfile:   { type: string, required: false, default: "Dockerfile" }
      stack:        { type: string, required: false, default: 'php-laravel' }
      build_mode:   { type: string, required: false, default: "full" } # fast|full
    secrets: {}

permissions:
  contents: read
  packages: write

jobs:
  test-build-push:
    if: github.repository != 'puthi-sgr/puthi-cicd-templates'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ── Stack-aware setup/tests (host-run) ─────────────────────────────────
      - name: Setup & Test (Laravel on host)
        if: ${{ inputs.stack == 'php-laravel' }}
        uses: Puthi-sgr/puthi-cicd-templates/.github/actions/setup-php-laravel@v1.8
        with:
          mode: ${{ inputs.build_mode }}
        # NOTE: In mode=full your legacy composite will also tar a package; it's fine.
        # We IGNORE that artifact here because the container image is our deliverable.

      # (Future) Add other stacks with more `if:` blocks

      # ── Build & optionally push container image ────────────────────────────
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.github_token }}

      - name: Extract image metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.image_name }}
          tags: |
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }} # only sha value set to latest on main branch (push to main)
      
      - name: Build & Push #Build the image, Push to GHCR
        uses: docker/build-push-action@v6
        with:
          context:   ${{ inputs.context }}
          file:      ${{ inputs.dockerfile }}
          push:      ${{ github.event_name != 'pull_request' }} # if push, push the built image to ghcr. only push on main (or non-PR events)
          tags:      ${{ steps.meta.outputs.tags }}

          labels:    ${{ steps.meta.outputs.labels }}
